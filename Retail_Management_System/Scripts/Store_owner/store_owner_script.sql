SET SERVEROUTPUT ON SIZE UNLIMITED
SET FEEDBACK ON

-- Procedure to drop table if it exists
DECLARE
  table_not_found EXCEPTION;
  insufficient_privilege EXCEPTION;
  PRAGMA EXCEPTION_INIT(table_not_found, -00955);
  PRAGMA EXCEPTION_INIT(insufficient_privilege, -01031);
BEGIN
-- Fetch the required tables and then loop over them and delete them.
  FOR t IN (SELECT table_name FROM user_tables WHERE table_name IN ('ADDRESS','CUSTOMER','PRODUCT','ORDERS','ITEM_ORDERS','EMPLOYEE','PURCHASES','VENDOR') ) LOOP
    EXECUTE IMMEDIATE 'DROP TABLE ' || t.table_name || ' CASCADE CONSTRAINTS';
    DBMS_OUTPUT.PUT_LINE('Dropped table ' || t.table_name);
  END LOOP;
EXCEPTION
  WHEN table_not_found THEN 
    raise_application_error(-2000, 'Exit');
  WHEN insufficient_privilege THEN
    DBMS_OUTPUT.PUT_LINE('Insufficient privileges to drop table ');
END;
/
CREATE TABLE Address (
    ADDRESS_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    HOUSE_NUMBER NUMBER,
    STREET VARCHAR2(20),
    CITY VARCHAR2(15),
    STATE VARCHAR2(20),
    COUNTRY VARCHAR2(20),
    POSTAL_CODE NUMBER
);

CREATE TABLE Customer (
    CUSTOMER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    FIRST_NAME VARCHAR2(30),
    LAST_NAME VARCHAR2(30),
    ADDRESS_ID NUMBER,
    PHONE_NUMBER VARCHAR2(15),
    EMAIL VARCHAR2(25)
);

CREATE TABLE Product (
    PRODUCT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    CATEGORY VARCHAR2(35),
    NAME VARCHAR2(35),
    REMAINING_UNITS NUMBER,
    SELLING_PRICE NUMBER
);

CREATE TABLE Orders (
    ORDER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    CUSTOMER_ID NUMBER,
    EMPLOYEE_ID NUMBER,
    ORDER_DATE TIMESTAMP -- Renamed 'DATE' to 'ORDER_DATE'
);

CREATE TABLE Item_Orders (
    ORDER_ID NUMBER,
    PRODUCT_ID NUMBER,
    UNITS NUMBER
);

CREATE TABLE Employee (
    EMPLOYEE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    FIRST_NAME VARCHAR2(30),
    LAST_NAME VARCHAR2(30),
    ADDRESS_ID NUMBER,
    EMAIL VARCHAR2(25),
    PHONE_NUMBER VARCHAR2(15),
    HIRING_DATE TIMESTAMP,
    ROLE VARCHAR2(15),
    WAGE NUMBER
);

CREATE TABLE Purchases (
    TRANSACTION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    PURCHASE_DATE TIMESTAMP,
    VENDOR_ID NUMBER,
    PRODUCT_ID NUMBER,
    QUANTITY NUMBER,
    TOTAL_PRICE NUMBER(10, 2)
);

CREATE TABLE Vendor (
    VENDOR_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    NAME VARCHAR2(45),
    ADDRESS_ID NUMBER,
    PHONE_NUMBER VARCHAR2(45),
    EMAIL VARCHAR2(45)
);